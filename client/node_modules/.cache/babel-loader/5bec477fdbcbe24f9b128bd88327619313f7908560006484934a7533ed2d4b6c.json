{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// import {\n//   deleteProductReducer,\n\n// } from \"./reducers/ProductReducer\";\n// import { allUsersReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from \"./reducers/userReducer\";\n\nconst reducer = combineReducers({\n  //   products: productsReducer,\n});\nlet initialState = {};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","reducer","initialState","middleWare","store"],"sources":["/home/radicalstart/Desktop/todo/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n// import {\n//   deleteProductReducer,\n  \n// } from \"./reducers/ProductReducer\";\n// import { allUsersReducer, forgotPasswordReducer, profileReducer, userDetailsReducer, userReducer } from \"./reducers/userReducer\";\n   \n\nconst reducer = combineReducers({\n//   products: productsReducer,\n\n});\n\nlet initialState = {\n  \n};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D;AACA;;AAEA;AACA;;AAGA,MAAMC,OAAO,GAAGJ,eAAe,CAAC;EAChC;AAAA,CAEC,CAAC;AAEF,IAAIK,YAAY,GAAG,CAEnB,CAAC;AAED,MAAMC,UAAU,GAAG,CAACJ,KAAK,CAAC;AAE1B,MAAMK,KAAK,GAAGR,WAAW,CACvBK,OAAO,EACPC,YAAY,EACZF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}