{"ast":null,"code":"var _jsxFileName = \"/home/radicalstart/Desktop/Todo/todo/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, NavLink, Routes, Route } from 'react-router-dom';\nimport Add from './screens/Add';\nimport Edit from './screens/View';\nimport Login from './screens/Login';\nimport Register from './screens/Register';\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkError\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, new HttpLink({\n  uri: \"http://localhost:3004/graphql\"\n})]);\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit\",\n          element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","BrowserRouter","NavLink","Routes","Route","Add","Edit","Login","Register","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","from","onError","errorLink","graphqlErrors","networkError","map","message","location","path","alert","link","uri","client","cache","App"],"sources":["/home/radicalstart/Desktop/Todo/todo/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, NavLink, Routes, Route } from 'react-router-dom';\nimport Add from './screens/Add';\nimport Edit from './screens/View';\nimport Login from './screens/Login';\nimport Register from './screens/Register';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:3004/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <BrowserRouter>\n  \n \n    <Routes>\n      <Route path=\"/\" element={<Add/>} />\n      <Route path=\"/login\" element={<Login/>} />\n      <Route path=\"/register\" element={<Register/>} />\n\n      <Route path=\"/edit\" element={<Edit/>} />\n\n    \n    </Routes>\n  </BrowserRouter>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACxE,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,QAAQ,MAAM,oBAAoB;AAEzC,SACEC,YAAY,EACZC,aAAa,EACbC,cAAc,EACdC,QAAQ,EACRC,IAAI,QACC,gBAAgB;AACvB,SAASC,OAAO,QAAQ,2BAA2B;AAAC;AAEpD,MAAMC,SAAS,GAAGD,OAAO,CAAC,QAAqC;EAAA,IAApC;IAAEE,aAAa;IAAEC;EAAa,CAAC;EACxD,IAAID,aAAa,EAAE;IACjBA,aAAa,CAACE,GAAG,CAAC,SAAiC;MAAA,IAAhC;QAAEC,OAAO;QAAEC,QAAQ;QAAEC;MAAK,CAAC;MAC5CC,KAAK,CAAE,iBAAgBH,OAAQ,EAAC,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMI,IAAI,GAAGV,IAAI,CAAC,CAChBE,SAAS,EACT,IAAIH,QAAQ,CAAC;EAAEY,GAAG,EAAE;AAAgC,CAAC,CAAC,CACvD,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAIhB,YAAY,CAAC;EAC9BiB,KAAK,EAAE,IAAIhB,aAAa,EAAE;EAC1Ba,IAAI,EAAEA;AACR,CAAC,CAAC;AAEF,SAASI,GAAG,GAAG;EACb,oBACE,QAAC,cAAc;IAAC,MAAM,EAAEF,MAAO;IAAA,uBAC/B,QAAC,aAAa;MAAA,uBAGd,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,GAAG;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,eACnC,QAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,eAAE,QAAC,KAAK;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,eAC1C,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG,eAEhD,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,OAAO,eAAE,QAAC,IAAI;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IAGjC;MAAA;MAAA;MAAA;IAAA;EACK;IAAA;IAAA;IAAA;EAAA,QACC;AAEnB;AAAC,KAlBQE,GAAG;AAoBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}